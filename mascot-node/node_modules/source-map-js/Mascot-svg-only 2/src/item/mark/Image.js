import Rectangle from "../../basic/Rectangle";
import { ItemType } from "../../util/Constants";
import Mark from "./Mark";

export default class Image extends Mark {

    constructor(args) {
		super(args);
		this.type = ItemType.Image;
        this._src = args.src;
        this._x = "x" in args ? args.x : 0;
        this._y = "y" in args ? args.y : 0;
        this._width = "width" in args ? args.width : 100;
        this._height = "height" in args ? args.height: 100;
    }

    toJSON() {
        let json = super.toJSON();
        json.src = this._src;
        json.x = this._x;
        json.y = this._y;
        json.width = this._width;
        json.height = this._height;
        return json;
    }


    get src() {
        return this._src;
    }

    set src(s) {
        this._src = s;
    }

    get width() {
        return this._width;
    }

    set width(w) {
        this._width = w;
        this._updateBounds();
    }

    get height() {
        return this._height;
    }

    set height(h) {
        this._height = h;
        this._updateBounds();
    }

    get x() {
        return this._x;
    }

    set x(v) {
        this._x = v;
        this._updateBounds();
    }

    get y() {
        return this._y;
    }

    set y(v) {
        this._y = v;
        this._updateBounds();
    }

    get bounds() {
		if (!this._bounds)
			this._updateBounds();
		return this._bounds;
	}

    _updateBounds() {		
		this._bounds = new Rectangle(this._x, this._y, this._width, this._height);
	}

    copyPropertiesTo(target) {
		target.attrs = Object.assign({}, this.attrs);
		target.styles = Object.assign({}, this.styles);
		
		if (this._dataScope)
			target._dataScope = this._dataScope.clone();
		
        target.x = this._x;
        target.y = this._y;
        target.width = this._width;
        target.height = this._height;
        target.src = this._src;
	}

    _doTranslate(dx, dy) {
        this._x += dx;
        this._y += dy;
        this._updateBounds();
    }
}