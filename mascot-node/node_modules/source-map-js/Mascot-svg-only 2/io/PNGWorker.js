const puppeteer = require('puppeteer');
const fs = require('fs').promises;
const path = require('path');

async function generatePNGs() {
    const browser = await puppeteer.launch({ headless: "new" }); //"new"
    const page = await browser.newPage();
    const json = await fs.readFile("../demos/static.json", 'utf8');
    let demos = JSON.parse(json);

    await checkDirectory('png/');
    for (const d in demos) {
        if (demos[d].draft) continue;
        if (d === "Isotype") continue;
        const s = await fs.readFile("scene/" + d + ".msc", 'utf8');
        let scene = JSON.parse(s);
        let wd = parseInt(scene.bounds.width + scene.bounds.left) + 50,
            ht = parseInt(scene.bounds.height + scene.bounds.top) + 80;
        const filePath = path.resolve(__dirname, 'svg', d + '.svg');
        await page.setViewport({ width: wd, height: ht });
        await page.goto('file://' + filePath);
        await page.screenshot({ path: `png/${d}.png` });
    }

    await browser.close();
}

async function directoryExists(dirPath) {
    try {
        await fs.access(dirPath);
        return true;
    } catch {
        return false;
    }
  }
  
  async function checkDirectory(dirPath) {
    if (!(await directoryExists(dirPath))) {
      await fs.mkdir(dirPath, { recursive: true });
    }
  }

generatePNGs();