let scn = msc.scene();
let dt = await msc.csv("datasets/csv/gdp-lifeExp.csv");
let circle = scn.mark("circle", {radius: 6, x: 100, y: 80, fillColor: "orange", strokeWidth: 0});

let collection = scn.repeat(circle, dt, { field: "Country" });

//Country,GDP per capita,Life expectancy,Population,Continent
let xEncoding = scn.encode(circle, { field: "GDP per capita", channel: "x" });
let yEncoding = scn.encode(circle, { field: "Life expectancy", channel: "y" });
let fillEncoding = scn.encode(circle, { field: "Continent", channel: "fillColor" });

xEncoding.scale.rangeExtent = 450;
yEncoding.scale.rangeExtent = 450;

scn.setProperties(circle, { opacity: "0.7" });

scn.axis("x", "GDP per capita", { orientation: "bottom", labelFormat: ".2s" });
scn.axis("y", "Life expectancy", { orientation: "left" });
let legend = scn.legend("fillColor", "Continent", { x: 600, y: 250 });
scn.gridlines("x", "GDP per capita");
scn.gridlines("y", "Life expectancy");
scn.addInteraction({
    listener: scn,
    event: "brush",
    hitObject: collection,
    target: circle,
    predicate: [
        { field: "GDP per capita", type: "range", channel: 'x' },
        { field: "Life expectancy", type: "range", channel: 'y' }
    ],
    targetEval: {
        false: { opacity: 0.3, vxOpacity: 0.3, radius: 5 },
    },
});
scn.addInteraction({
    listener: scn,
    event: "click",
    hitObject: legend,// collection but legend works for both
    target: circle,
    predicate: [{ field: 'Continent', type: 'list', multiByField: true }],//list for multiselect, point for single select
    targetEval: {
        false: { opacity: 0.3, vxOpacity: 0.3, radius: 5 },
    },
})


// let r = msc.renderer("svg");
// r.render(scn, "svgElement", {collectionBounds: false});	
