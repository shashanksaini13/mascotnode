import Path from "./Path";
import {ItemType} from "../../util/Constants";
import Point from "../../basic/Point";

export default class PolygonPath extends Path {

    constructor(args) {
        super(args);
        this.type = ItemType.Polygon;
        this.closed = true;

        if ("x" in args)
            this._x = args.x;
        if ("y" in args)
            this._y = args.y;
        if ("radius" in args)
            this._radius = args.radius;
    }        

    get radius() {
		return this._radius;
	}

	get x() {
		return this._x;
	}

	get y() {
		return this._y;
	}

	get center() {
		return new Point(this._x, this._y);
	}

    set x(v) {
		this._x = v;
		this._updateBounds();
	}

	set y(v) {
		this._y = v;
		this._updateBounds();
	}

	set radius(r) {
		this._radius = r;
		this._updateBounds();
	}

    copyPropertiesTo(target) {
		super.copyPropertiesTo(target);
		target._x = this._x;
		target._y = this._y;
		target._radius = this._radius;
	}

    _doTranslate(dx, dy) {
		this._x += dx;
		this._y += dy;
        super._doTranslate(dx, dy);
	}

}