import Path from "./Path";
import {ItemType} from "../../util/Constants";
import Rectangle from "../../basic/Rectangle";
import Point from "../../basic/Point";

export default class RingPath extends Path {
	
	constructor(args) {
		super(args);
		this.type = ItemType.Ring;
		this.closed = true;
		this._x = ("x" in args) ? args.x : 0;
		this._y = ("y" in args) ? args.y : 0;
		this._innerRadius = ("innerRadius" in args) ? args.innerRadius : 100;
        this._outerRadius = ("outerRadius" in args) ? args.outerRadius : 200;
	}

	get innerRadius() {
		return this._innerRadius;
	}

    set innerRadius(r) {
		this._innerRadius = r;
	}

    get outerRadius() {
		return this._outerRadius;
	}

    set outerRadius(r) {
		this._outerRadius = r;
		this._updateBounds();
	}

	get x() {
		return this._x;
	}

	get y() {
		return this._y;
	}

	get center() {
		return new Point(this._x, this._y);
	}

	set x(v) {
		this._x = v;
		this._updateBounds();
	}

	set y(v) {
		this._y = v;
		this._updateBounds();
	}

	get thickness() {
        return this._outerRadius - this._innerRadius;
    }

	_doTranslate(dx, dy) {
		this._x += dx;
		this._y += dy;
		this._updateBounds();
	}

	_updateBounds() {		
		this._bounds = new Rectangle(this._x - this._outerRadius, this._y - this._outerRadius, this._outerRadius * 2, this._outerRadius * 2);
	}

	copyPropertiesTo(target) {
		super.copyPropertiesTo(target);
		target._x = this._x;
		target._y = this._y;
		target._innerRadius = this._innerRadius;
        target._outerRadius = this._outerRadius;
	}

    getSVGPathData() {
        let cmds = [
            "M " +  this._x + " " + this._y, // Move to center of ring
            "m 0, -" + this._outerRadius, // Move to top of ring
            "a " + this._outerRadius + "," + this._outerRadius + ", 0, 1, 0, 1, 0", // Draw outer arc, but don't close it
            "Z", // default fill-rule:even-odd will help create the empty innards
            "m 0 " + (this._outerRadius-this._innerRadius), // Move to top point of inner radius
            "a " + this._innerRadius + ", " + this._innerRadius + ", 0, 1, 1, -1, 0", // Draw inner arc, but don't close it
            "Z" // Close the inner ring. Actually will still work without, but inner ring will have one unit missing in stroke   
        ];
        return cmds.join(" ");
    }

}