import * as d3 from "d3";
import { DataType } from "../../util/Constants";
import DataTable from "../DataTable";

export default function bin(table, fields, args) {
	//right now only handles one field
    let f = fields[0];
    //TODO: check that can perform kde on f
    let gf = table.nonNumericFields;

    //construct groups
    let g = {};
    for (let row of table.data){
        let k = gf.map(d => String(row[d])).join("_");
        if (!g.hasOwnProperty(k)){
            g[k] = gf.map(d => row[d]);
            g[k].push([]);
        }  
        g[k][g[k].length -1].push(row[f]);
    }

    let newData = [];
    for (let k in g) {
        let data = g[k].pop(), 
            bin = d3.bin()(data);
        for (let b of bin) {
            let o = {};
            g[k].forEach((d, i) => o[gf[i]] = d);
            o["x0"] = b.x0;
            o["x1"] = b.x1;
            o[f+"_count"] = b.length;
            newData.push(o);
        }
    }

    let fTypes = {};
    gf.forEach(d => fTypes[d] = table.getFieldType(d));
    fTypes["x0"] = DataType.Number;
    fTypes["x1"] = DataType.Number;
    fTypes[f+"_count"] = DataType.Number;

    let dt = new DataTable(newData, table.url, fTypes);
    dt.sourceDataTable = table;
    dt.transform = {"type": "bin", "args": fields};
    return dt;
}